(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{358:function(s,n,a){"use strict";a.r(n);var t=a(4),e=Object(t.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"nginx性能优化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx性能优化"}},[s._v("#")]),s._v(" nginx性能优化")]),s._v(" "),n("h2",{attrs:{id:"example"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[s._v("#")]),s._v(" example")]),s._v(" "),n("div",{staticClass:"language-nginx line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-nginx"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运行Nginx进程的用户")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("user")]),s._v(" nginx")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("worker_processes")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("worker_cpu_affinity")]),s._v(" auto")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义存储某类型的全局错误的日志位置")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# nginx日志分为很多级别 [debug | info | notice | warn | error | crit | alert | emerg]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("error_log")]),s._v("  /var/log/nginx/error.log  error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定进程ID（pid）存放的路径 ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("pid")]),s._v("        /var/run/nginx.pid")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 一个nginx进程打开的最多文件描述符数目，理论值应该是系统的最多打开文件数（ulimit -n）与nginx进程数相除，但是nginx分配请求并不是那么均匀，所以最好与ulimit -n的值保持一致。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("worker_rlimit_nofile")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("65535")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("events")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用epoll的I/O模型，用这个模型来高效处理异步事件")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("use")]),s._v(" epoll")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 每个进程允许的最多连接数，理论上每台nginx服务器的最大连接数为worker_processes*worker_connections。")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("worker_connections")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20480")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("h2",{attrs:{id:"配置cpu参数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置cpu参数"}},[s._v("#")]),s._v(" 配置CPU参数")]),s._v(" "),n("p",[s._v("Nginx默认没有开启利用多核cpu，我们可以通过增加worker_cpu_affinity配置参数来充分利用多核cpu的性能。cpu是任务处理，计算最关键的资源，cpu核越多，性能就越好。")]),s._v(" "),n("h3",{attrs:{id:"nginx-worker-processes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-worker-processes"}},[s._v("#")]),s._v(" nginx worker_processes")]),s._v(" "),n("p",[s._v("worker_processes最多开启8个，8个以上性能就不会再提升了，而且稳定性会变的更低，因此8个进程够用了；")]),s._v(" "),n("h3",{attrs:{id:"nginx-worker-cpu-affinity"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-worker-cpu-affinity"}},[s._v("#")]),s._v(" nginx worker_cpu_affinity")]),s._v(" "),n("p",[s._v("cpu有多少个核？就有几位数，1代表内核开启，0代表内核关闭；")]),s._v(" "),n("p",[s._v("例如：我有一个服务器是最低配，8核CPU，nginx配置信息则如下：")]),s._v(" "),n("div",{staticClass:"language-nginx line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-nginx"}},[n("code",[n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("worker_processes")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("worker_cpu_affinity")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00000001")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00000010")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00000100")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00001000")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00010000")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00100000")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01000000")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000000")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("上面的配置表示：8核CPU，开启8个进程。")]),s._v(" "),n("blockquote",[n("p",[n("code",[s._v("nginx worker_cpu_affinity")]),s._v("参数通常设置为"),n("code",[s._v("auto")])]),s._v(" "),n("p",[s._v("将Nginx工作进程绑定到指定的CPU核心，默认Nginx是不进行进程绑定的，绑定并不是意味着当前nginx进程独占以一核心CPU，但是可以保证此进程不会运行在其他核心上，这就极大减少了nginx的工作进程在不同的cpu核心上的来回跳转，减少了CPU对进程的资源分配与回收以及内存管理等，因此可以有效的提升nginx服务器的性能")])]),s._v(" "),n("h3",{attrs:{id:"worker-priority"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#worker-priority"}},[s._v("#")]),s._v(" worker_priority")]),s._v(" "),n("div",{staticClass:"language-nginx line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-nginx"}},[n("code",[s._v("修改全局配置：\n\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("worker_priority")]),s._v(" -20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#工作进程优先级，-20~19（超过-20，按-20，超过19，按19）")]),s._v("\n\n[root@nginx ~]# ps -axo pid,cmd,nice | grep nginx\n 1362 nginx: master process /apps   0\n 48255 nginx: worker process       -20\n 48256 nginx: worker process       -20\n 48257 nginx: worker process       -20\n 48258 nginx: worker process       -20\n 48260 grep --color=auto nginx       0\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("h3",{attrs:{id:"实现高并发"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实现高并发"}},[s._v("#")]),s._v(" 实现高并发")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /lib/systemd/system/nginx.service\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#如果systemd启动,则需要修改nginx.service（自启动）文件中加LimitNOFILE=100000,才能有效")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Service"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("LimitNOFILE")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100000")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);