(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{399:function(r,e,t){"use strict";t.r(e);var _=t(4),o=Object(_.a)({},(function(){var r=this,e=r._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[e("h1",{attrs:{id:"kubelet-内存溢出问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kubelet-内存溢出问题"}},[r._v("#")]),r._v(" kubelet 内存溢出问题")]),r._v(" "),e("p",[r._v("有两种解决方案 ：")]),r._v(" "),e("h3",{attrs:{id:"方案一"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#方案一"}},[r._v("#")]),r._v(" 方案一")]),r._v(" "),e("p",[r._v("修改虚机启动的引导项 grub 中的"),e("code",[r._v("cgroup.memory=nokmem")]),r._v("，让机器启动时直接禁用 cgroup的 kmem 属性")]),r._v(" "),e("p",[r._v("修改/etc/default/grub 为："),e("br"),r._v('\nGRUB_CMDLINE_LINUX="crashkernel=auto net.ifnames=0 biosdevname=0 intel_pstate=disable cgroup.memory=nokmem"'),e("br"),r._v("\n​"),e("br"),r._v("\n生成配置："),e("br"),r._v("\n/usr/sbin/grub2-mkconfig -o /boot/grub2/grub.cfg"),e("br"),r._v("\n​"),e("br"),r._v("\n重启机器："),e("br"),r._v("\nreboot"),e("br"),r._v("\n​"),e("br"),r._v("\n验证："),e("br"),r._v("\ncat /sys/fs/cgroup/memory/kubepods/burstable/pod*/*/memory.kmem.slabinfo 无输出即可。")]),r._v(" "),e("p",[r._v("这个方式对一些机器生效，但有些机器替换后没生效，且这个操作也需要机器重启，暂时不采纳")]),r._v(" "),e("h3",{attrs:{id:"方案二"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#方案二"}},[r._v("#")]),r._v(" 方案二")]),r._v(" "),e("p",[r._v("内核升级")]),r._v(" "),e("p",[r._v("rpm -ivh kernel-3.10.0-1062.4.1.el7.x86_64(1).rpm #下载内核")]),r._v(" "),e("p",[r._v('awk -F\' \'$1=="menuentry " {print i++ " : " $2}\' /etc/grub2.cfg #查看可用内核版本')]),r._v(" "),e("p",[r._v("cp /etc/default/grub /etc/default/grub.conf #备份系统启动参数")]),r._v(" "),e("p",[r._v("grub2-mkconfig -o /boot/grub2/grub.cfg #生成 grub 配置文件并重启")]),r._v(" "),e("p",[r._v("reboot")]),r._v(" "),e("p",[r._v("cd /sys/fs/cgroup/memory/ #到此目录下 随便创建一个文件")]),r._v(" "),e("p",[r._v("进入这个文件 会生成 memory.kmem.slabinfo 这个文件")]),r._v(" "),e("p",[r._v("cat memory.kmem.slabinfo 此文件 没有输出即可")])])}),[],!1,null,null,null);e.default=o.exports}}]);