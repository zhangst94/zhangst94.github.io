(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{376:function(s,e,t){"use strict";t.r(e);var a=t(4),n=Object(a.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"有状态应用管理-statefulset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#有状态应用管理-statefulset"}},[s._v("#")]),s._v(" 有状态应用管理 StatefulSet")]),s._v(" "),e("p",[s._v("StatefulSet(有状态集，缩写为sts）常用于部署有状态的且需要有序启动的应用程序，比如在进行SpringCloud项目容器化时，Eureka的部署是比较适合用StatefulSet部署方式的，可以给每个Eureka实例创建一个唯一且固定的标识符，并且每个Eureka实例无需配置多余的Service，其余Spring Boot应用可以直接通过Eureka的 Headless Service即可进行注册。")]),s._v(" "),e("p",[s._v("Eureka 的 statefulset,的资源名称是eureka，eureka-0          eureka-1 eureka-2")]),s._v(" "),e("p",[s._v("Service：headless service，没有ClusterIP     eureka-svc")]),s._v(" "),e("p",[s._v("Eureka-0.eureka-svc.NAMESPACE_NAME         eureka-1.eureka-svc ...")]),s._v(" "),e("h2",{attrs:{id:"statefulset的基本概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#statefulset的基本概念"}},[s._v("#")]),s._v(" StatefulSet的基本概念")]),s._v(" "),e("p",[s._v("StatefulSet主要用于管理有状态应用程序的工作负载API对象。比如在生产环境中，可以部署ElasticSearch集群、MongoDB集群或者需要持久化的RabbitMQ集群、Redis集群、Kafka集群和ZooKeeper.集群等。")]),s._v(" "),e("p",[s._v("和 Deployment类似，一个StatefulSet也同样管理着基于相同容器规范的Pod。不同的是，StatefulSet为每个Pod维护了一个粘性标识。这些Pod是根据相同的规范创建的，但是不可互换，每个 Pod 都有一个持久的标识符，在重新调度时也会保留，一般格式为StatefulSetName-Number。比如定义一个名字是Redis-Sentinel的 StatefulSet，指定创建三个Pod，那么创建出来的Pod 名字就为Redis-Sentinel-0、Redis-Sentinel-1、Redis-Sentinel-2。而StatefulSet创建的Pod一般使用Headless Service(无头服务〉进行通信，和普通的Service的区别在于Headless Service没有ClusterIP，它使用的是Endpoint 进行互相通信，Headless一般的格式为:")]),s._v(" "),e("p",[s._v("statefulSetName-{0..N-1 } . serxicelName.namespace.svc.clustex.local。")]),s._v(" "),e("p",[s._v("说明：")]),s._v(" "),e("p",[s._v("serviceName为Headless Service的名字，创建StatefulSet时，必须指定Headless Service名称；")]),s._v(" "),e("p",[s._v("0..N-1为Pod所在的序号，从0开始到N-1；")]),s._v(" "),e("p",[s._v("statefulSetName为StatefulSet的名字；")]),s._v(" "),e("p",[s._v("namespace为服务所在的命名空间；")]),s._v(" "),e("p",[s._v(".cluster.local为Cluster Domain（集群域）")]),s._v(" "),e("p",[s._v("假如公司某个项目需要在Kubernetes中部署一个主从模式的Redis，此时使用StatefulSet部署就极为合适，因为StatefulSet启动时，只有当前一个容器完全启动时，后一个容器才会被调度，并且每个容器的标识符是固定的，那么就可以通过标识符来断定当前Pod的角色")]),s._v(" "),e("p",[s._v("比如用一个名为 redis-ms 的 StatefulSet 部署主从架构的 Redis，第一个容器启动时，它的标识符为 redis-ms-0，并且 Pod 内主机名也为 redis-ms-0，此时就可以根据主机名来判断，当主机名为 redis-ms-0 的容器作为 Redis 的主节点，其余从节点，那么 Slave 连接 Master 主机配置就可以使用不会更改的 Master 的 Headless Serivce，此时 Redis 从节点（Slave）配置文件如下：")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("port "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v("\nslaveof redis-ms-0.redis-ms.public-service.svc.cluster.local "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v("\ntcp-backlog "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("511")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeout")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\ntcp-keeplive "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("其中 redis-ms-0.redis-ms.public-service.svc.cluster.local 是 Redis Master 的 Headless Service，在同一命名空间下只需要写 redis-ms-0.redis-ms 即可，后面的 public-service.svc.cluster.local 可以省略。")]),s._v(" "),e("h3",{attrs:{id:"statefulset注意事项"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#statefulset注意事项"}},[s._v("#")]),s._v(" StatefulSet注意事项")]),s._v(" "),e("p",[s._v("一般StatefulSet用于有以下一个或者多个需求的应用程序：")]),s._v(" "),e("ol",[e("li",[e("code",[s._v("需要稳定的独一无二的网络标识符。")])]),s._v(" "),e("li",[e("code",[s._v("需要持久化数据。")])]),s._v(" "),e("li",[e("code",[s._v("需要有序的、优雅的部署和扩展。")])]),s._v(" "),e("li",[e("code",[s._v("需要有序的自动滚动更新。")])])]),s._v(" "),e("p",[s._v("如果应用程序不需要任何稳定的标识符或者有序的部署、删除或者扩展，应该使用无状态的控制器部署应用程序，比如Deployment或者ReplicaSet。")]),s._v(" "),e("p",[s._v("StatefulSet是Kubernetes 1.9版本之前的beta资源，在1.5版本之前的任何Kubernetes版本都没有。")]),s._v(" "),e("p",[s._v("Pod所用的存储必须由PersistentVolume Provisioner（持久化卷配置器）根据请求配置StorageClass，或者由管理员预先配置，当然也可以不配置存储。")]),s._v(" "),e("p",[s._v("为了确保数据安全，删除和缩放StatefulSet不会删除与StatefulSet关联的卷，可以手动选择性地删除PVC和PV）。")]),s._v(" "),e("p",[s._v("StatefulSet目前使用Headless Service（无头服务）负责Pod的网络身份和通信，需要提前创建此服务。\n删除一个StatefulSet时，不保证对Pod的终止，要在StatefulSet中实现Pod的有序和正常终止，可以在删除之前将StatefulSet的副本缩减为0")]),s._v(" "),e("h3",{attrs:{id:"为什么要用headless-service-statefulset部署有状态应用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么要用headless-service-statefulset部署有状态应用"}},[s._v("#")]),s._v(" 为什么要用headless service+statefulSet部署有状态应用?")]),s._v(" "),e("h4",{attrs:{id:"headless-services介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#headless-services介绍"}},[s._v("#")]),s._v(" Headless Services介绍")]),s._v(" "),e("p",[s._v("Headless Services是一种特殊的service，其spec:clusterIP表示为None，这样在实际运行时就不会被分配ClusterIP。也被称为无头服务。")]),s._v(" "),e("h4",{attrs:{id:"_1、headless-service和普通service的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、headless-service和普通service的区别"}},[s._v("#")]),s._v(" 1、headless Service和普通Service的区别")]),s._v(" "),e("p",[s._v("headless不分配clusterIP")]),s._v(" "),e("p",[s._v("headless service可以通过解析service的DNS，返回所有Pod的地址和域名(statefulSet部署的Pod才有域名)")]),s._v(" "),e("p",[e("strong",[s._v("headless service会为关联的Pod分配一个域：\nservice-name.namespace-name.svc.cluster.local")])]),s._v(" "),e("p",[s._v("普通的service，只能通过解析service的DNS返回service的ClusterIP")]),s._v(" "),e("h4",{attrs:{id:"_2、statefulset和deployment控制器的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、statefulset和deployment控制器的区别"}},[s._v("#")]),s._v(" 2、statefulSet和Deployment控制器的区别")]),s._v(" "),e("p",[s._v("statefulSet下的Pod有DNS地址,通过解析Pod的DNS可以返回Pod的IP")]),s._v(" "),e("p",[e("strong",[s._v("StatefulSet会为关联的Pod保持一个不变的Pod Name\nstatefulset中Pod的hostname格式为\nstatefulsetname-(pod序号)")])]),s._v(" "),e("p",[s._v("而deployment下的Pod没有具体的域名，想访问Pod都是通过普通service来负载均衡到后端pod，无法指定访问具体哪个Pod")]),s._v(" "),e("h4",{attrs:{id:"_3、普通service解析service的dns结果"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、普通service解析service的dns结果"}},[s._v("#")]),s._v(" 3、普通Service解析service的DNS结果")]),s._v(" "),e("p",[s._v("Service的ClusterIP工作原理：一个service可能对应一组endpoints(所有pod的地址+端口)，client访问ClusterIP，通过iptables或者ipvs转发到Real Server(Pod)。")]),s._v(" "),e("p",[e("strong",[s._v("StatefulSet+headless service会为关联的每个Pod都分配一个具体的域名：\nPod-Name.service-name.namespace-name.svc.cluster.local")])]),s._v(" "),e("h2",{attrs:{id:"定义一个-statefulset-资源文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#定义一个-statefulset-资源文件"}},[s._v("#")]),s._v(" 定义一个 StatefulSet 资源文件")]),s._v(" "),e("p",[s._v("定义一个简单的 StatefulSet 的示例如下：")]),s._v(" "),e("div",{staticClass:"language-yaml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Service\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("labels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("selector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" web\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("clusterIP")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" None\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("---")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" apps/v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" StatefulSet\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" web\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("selector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("matchLabels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("serviceName")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nginx"')]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("replicas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("template")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("labels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containerPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n              "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" web\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br")])]),e("p",[s._v("其中：")]),s._v(" "),e("ul",[e("li",[s._v("kind：Service 定义了一个名字为 Nginx 的 Headless Service，创建的 Service格式为 nginx-0.nginx.default.svc.cluster.local，因为没有指定 Namespace （命名空间），所以默认部署在 default。")]),s._v(" "),e("li",[s._v("kind：StatefulSet 定义了一个名字为 web 的StatefulSet，replicas 表示部署 Pod 的副本数，本实例为2。")])]),s._v(" "),e("p",[s._v("在 StatefulSet 中必须设置 Pod 选择器（.spec.selector）用来匹配其标签（.spec.template.metadata.labels）。在1.8版本之前，如果未配置该字段（.spec.selector），将被设置为默认值。在1.8版本之后，如果为指定匹配Pod Selector，则会导致 StatefulSet 创建错误。")]),s._v(" "),e("p",[s._v("当 StatefulSet 控制器创建 Pod 时，它会添加一个标签 statefulset.kubernetes.io/pod-name ， 该标签的值为 Pod的名称，用于匹配 Service。")]),s._v(" "),e("p",[s._v("使用 "),e("code",[s._v("kubectl apply")]),s._v(" 创建")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("kubectl apply "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" statefulset.yaml\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language-yaml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Pod\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" busybox\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" busybox\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" busybox"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("1.28.4\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("command")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" sleep\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3600"')]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("resources")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("limits")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("memory")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"128Mi"')]),s._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cpu")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"500m"')]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("restartPolicy")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Always\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("$ kubectl "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-it")]),s._v(" busybox -- "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v("\n/ "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# nslookup web-0.nginx")]),s._v("\nServer:    "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.96")]),s._v(".0.10\nAddress "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(": "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.96")]),s._v(".0.10 kube-dns.kube-system.svc.cluster.local\n\nName:      web-0.nginx\nAddress "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(": "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.1")]),s._v(".0.198 web-0.nginx.default.svc.cluster.local\n/ "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# nslookup web-1.nginx")]),s._v("\nServer:    "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.96")]),s._v(".0.10\nAddress "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(": "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.96")]),s._v(".0.10 kube-dns.kube-system.svc.cluster.local\n\nName:      web-1.nginx\nAddress "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(": "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.1")]),s._v(".0.199 web-1.nginx.default.svc.cluster.local\n\n$ kubectl get pods "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" wide\nNAME      READY   STATUS    RESTARTS   AGE     IP           NODE             NOMINATED NODE   READINESS GATES\nbusybox   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          6m52s   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.1")]),s._v(".0.202   docker-desktop   "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("           "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nweb-0     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          14m     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.1")]),s._v(".0.198   docker-desktop   "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("           "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nweb-1     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          14m     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.1")]),s._v(".0.199   docker-desktop   "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("           "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("p",[s._v("nslookup 命令的输出结果中，我们可以看到，在访问 web-0.nginx 的时候，最后解析\n到的，正是 web-0 这个 Pod 的 IP 地址；而当访问 web-1.nginx 的时候，解析到的则是\nweb-1 的 IP 地址。")]),s._v(" "),e("h2",{attrs:{id:"扩容缩容"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#扩容缩容"}},[s._v("#")]),s._v(" 扩容缩容")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("$ kubectl scale "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--replicas")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" sts web\nstatefulset.apps/web scaled\n$ kubectl get pods\nNAME      READY   STATUS    RESTARTS      AGE\nweb-0     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("             40m\nweb-1     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("             40m\nweb-2     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("             11m\n\n$ kubectl scale "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--replicas")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" sts web\nstatefulset.apps/web scaled\n$ kubectl get pods\nNAME      READY   STATUS    RESTARTS      AGE\nweb-0     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("             41m\nweb-1     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("             41m\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[s._v("StatefulSet副本启动顺序按照名称0，1，2，只有web-0完全启动之后才会启动web-1，web-1完全启动之后才会启动web-2")]),s._v(" "),e("p",[s._v("删除的时候顺序与启动相反，从最后一个序号开始，2，1，0，如果web-2删除过程中，web-0挂掉了，那么web-1不会被删除，必须等待web-0启动状态变为ready之后，才会删除web-1")]),s._v(" "),e("p",[s._v("StatefulSet滚动更新的时候会先删除旧的副本，再创建新的副本，如果只有一个副本的话，会导致业务不可用，所以要根据自己的实际情况选择使用StatefulSet或者Deployment，如果必须固定主机名或者pod名称，建议使用StatefulSet")]),s._v(" "),e("h2",{attrs:{id:"statefulset更新策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#statefulset更新策略"}},[s._v("#")]),s._v(" StatefulSet更新策略")]),s._v(" "),e("p",[s._v("更新策略：")]),s._v(" "),e("ul",[e("li",[e("strong",[s._v("rollingUpdate")]),s._v(": 当updateStrategy的值被设置为RollingUpdate时，StatefulSet  Controller会删除并创建StatefulSet相关的每个Pod对象，其处理顺序与StatefulSet终止Pod的顺序一致，即从序号最大的Pod开始重建，每次更新一个Pod。")]),s._v(" "),e("li",[e("strong",[s._v("onDelete")]),s._v("：当updateStrategy的值被设置为OnDelete时，StatefulSet  Controller并不会自动更新StatefulSet中的Pod实例，而是需要用户手动删除这些Pod并触发StatefulSet  Controller创建新的Pod实例来弥补，因此这其实是一种手动升级模式。")]),s._v(" "),e("li",[e("strong",[s._v("Partitione")]),s._v(" :  updateStrategy也支持特殊的分区升级策略（Partitione），在这种模式下，用户指定一个序号，StatefulSet中序号大于等于此序号的Pod实例会全部被升级，小于此序号的Pod实例则保留旧版本不变，即使这些Pod被删除、重建，也仍然保持原来的旧版本。这种分区升级策略通常用于按计划分步骤的系统升级过程中。")])]),s._v(" "),e("h2",{attrs:{id:"statefulset灰度发布"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#statefulset灰度发布"}},[s._v("#")]),s._v(" StatefulSet灰度发布")]),s._v(" "),e("p",[s._v("修改配置")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@k8s-master01 ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl edit sts web")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修改以下内容")]),s._v("\nupdateStrategy:\ntype: RollingUpdate \nrollingUpdate:\npartition: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 小于2的不会被更新")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("可以使用这种机制实现灰度机制，先发布一两个实例，确认没有问题之后再发布所有实例，这就是stateful的分段更新，相当于灰度发布的机制，也可以使用其它的方式，比如服务网格，或者myservices")]),s._v(" "),e("h2",{attrs:{id:"statefulset级联删除和非级联删除"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#statefulset级联删除和非级联删除"}},[s._v("#")]),s._v(" StatefulSet级联删除和非级联删除")]),s._v(" "),e("ul",[e("li",[s._v("级联删除：删除sts时同时删除Pod")])]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@k8s-master01 ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl delete sts web")]),s._v("\n statefulset.apps "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"web"')]),s._v(" deleted\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("ul",[e("li",[s._v("非级联删除：删除sts时不删Pod")])]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@k8s-master01 ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl delete sts web --cascade=false")]),s._v("\nwarning: "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--cascade")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false is deprecated "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("boolean value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" and can be replaced with "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--cascade")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("orphan.\nstatefulset.apps "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"web"')]),s._v(" deleted\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("查看pod，可以看到pod依然存在，只是没有sts管理了，再次删除pod不会被重新创建")])])}),[],!1,null,null,null);e.default=n.exports}}]);