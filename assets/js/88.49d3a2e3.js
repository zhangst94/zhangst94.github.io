(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{409:function(s,a,t){"use strict";t.r(a);var e=t(4),n=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"coredns-性能优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#coredns-性能优化"}},[s._v("#")]),s._v(" CoreDNS 性能优化")]),s._v(" "),a("p",[s._v("CoreDNS 作为 Kubernetes 集群的域名解析组件，如果性能不够可能会影响业务，本文介绍几种 CoreDNS 的性能优化手段。")]),s._v(" "),a("h2",{attrs:{id:"合理控制-coredns-副本数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#合理控制-coredns-副本数"}},[s._v("#")]),s._v(" 合理控制 CoreDNS 副本数")]),s._v(" "),a("p",[s._v("考虑以下几种方式:")]),s._v(" "),a("ol",[a("li",[s._v("根据集群规模预估 coredns 需要的副本数，直接调整 coredns deployment 的副本数:")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("kubectl -n kube-system scale --replicas=10 deployment/coredns\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ol",[a("li",[s._v("为 coredns 定义 HPA 自动扩缩容。")]),s._v(" "),a("li",[s._v("安装 "),a("a",{attrs:{href:"https://github.com/kubernetes-sigs/cluster-proportional-autoscaler",target:"_blank",rel:"noopener noreferrer"}},[s._v("cluster-proportional-autoscaler"),a("OutboundLink")],1),s._v(" 以实现更精确的扩缩容(推荐)。")])]),s._v(" "),a("h2",{attrs:{id:"禁用-ipv6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#禁用-ipv6"}},[s._v("#")]),s._v(" 禁用 ipv6")]),s._v(" "),a("p",[s._v("如果 K8S 节点没有禁用 IPV6 的话，容器内进程请求 coredns 时的默认行为是同时发起 IPV4 和 IPV6  解析，而通常我们只需要用到 IPV4，当容器请求某个域名时，coredns 解析不到 IPV6 记录，就会 forward 到 upstream 去解析，如果到 upstream 需要经过较长时间(比如跨公网，跨机房专线)，就会拖慢整个解析流程的速度，业务层面就会感知 DNS 解析慢。")]),s._v(" "),a("p",[s._v("CoreDNS 有一个 "),a("a",{attrs:{href:"https://coredns.io/plugins/template/",target:"_blank",rel:"noopener noreferrer"}},[s._v("template"),a("OutboundLink")],1),s._v(" 的插件，可以用它来禁用 IPV6 的解析，只需要给 CoreDNS 加上如下的配置:")]),s._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[s._v("template ANY AAAA "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    rcode NXDOMAIN\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("blockquote",[a("p",[s._v("这个配置的含义是：给所有 IPV6 的解析请求都响应空记录，即无此域名的 IPV6 记录。")])]),s._v(" "),a("h2",{attrs:{id:"优化-ndots"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优化-ndots"}},[s._v("#")]),s._v(" 优化 ndots")]),s._v(" "),a("p",[s._v("默认情况下，Kubernetes 集群中的域名解析往往需要经过多次请求才能解析到。查看 pod 内 的 "),a("code",[s._v("/etc/resolv.conf")]),s._v(" 可以知道 "),a("code",[s._v("ndots")]),s._v(" 选项默认为 5:")]),s._v(" "),a("p",[s._v("意思是: 如果域名中 "),a("code",[s._v(".")]),s._v(" 的数量小于 5，就依次遍历 "),a("code",[s._v("search")]),s._v(" 中的后缀并拼接上进行 DNS 查询。")]),s._v(" "),a("p",[s._v("举个例子，在 debug 命名空间查询 "),a("code",[s._v("kubernetes.default.svc.cluster.local")]),s._v(" 这个 service:")]),s._v(" "),a("ol",[a("li",[s._v("域名中有 4 个 "),a("code",[s._v(".")]),s._v("，小于 5，尝试拼接上第一个 search 进行查询，即 "),a("code",[s._v("kubernetes.default.svc.cluster.local.debug.svc.cluster.local")]),s._v("，查不到该域名。")]),s._v(" "),a("li",[s._v("继续尝试 "),a("code",[s._v("kubernetes.default.svc.cluster.local.svc.cluster.local")]),s._v("，查不到该域名。")]),s._v(" "),a("li",[s._v("继续尝试 "),a("code",[s._v("kubernetes.default.svc.cluster.local.cluster.local")]),s._v("，仍然查不到该域名。")]),s._v(" "),a("li",[s._v("尝试不加后缀，即 "),a("code",[s._v("kubernetes.default.svc.cluster.local")]),s._v("，查询成功，返回响应的 ClusterIP。")])]),s._v(" "),a("p",[s._v("可以看到一个简单的 service 域名解析需要经过 4 轮解析才能成功，集群中充斥着大量无用的 DNS 请求。")]),s._v(" "),a("p",[s._v("怎么办呢？我们可以设置较小的 ndots，在 Pod 的 dnsConfig 中可以设置:")]),s._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" test\n    image"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("busybox\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("dnsConfig")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" \n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("options")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ndots\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("然后业务发请求时尽量将 service 域名拼完整，这样就不会经过 search 拼接造成大量多余的 DNS 请求。")]),s._v(" "),a("p",[s._v("不过这样会比较麻烦，有没有更好的办法呢？有的！请看下面的 autopath 方式。")]),s._v(" "),a("h2",{attrs:{id:"启用-autopath"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启用-autopath"}},[s._v("#")]),s._v(" 启用 autopath")]),s._v(" "),a("p",[s._v("启用 CoreDNS 的 autopath 插件可以避免每次域名解析经过多次请求才能解析到，原理是 CoreDNS 智能识别拼接过  search 的 DNS 解析，直接响应 CNAME 并附上相应的 ClusterIP，一步到位，可以极大减少集群内 DNS 请求数量。")]),s._v(" "),a("p",[s._v("启用方法是修改 CoreDNS 配置:")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("kubectl "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" kube-system edit configmap coredns\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("修改红框中圈出来的配置:")]),s._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("Corefile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token scalar string"}},[s._v("\n    .:53 {\n        errors\n        health {\n           lameduck 5s\n        }\n        ready\n        kubernetes cluster.local in-addr.arpa ip6.arpa {\n           pods insecure   #这里修改为pods verified\n           fallthrough in-addr.arpa ip6.arpa\n           ttl 30\n        }\n        # 加上autopath @kubernetes\n        prometheus :9153\n        forward . /etc/resolv.conf {\n           max_concurrent 1000\n        }\n        cache 30\n        loop\n        reload\n        loadbalance\n    }")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ConfigMap\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("creationTimestamp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2023-04-08T13:31:42Z"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" coredns\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" kube"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("system\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("resourceVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"220"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("uid")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 837e45be"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("7d6a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("4572"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("99e9"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("c6a40431c76d\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br")])])])}),[],!1,null,null,null);a.default=n.exports}}]);