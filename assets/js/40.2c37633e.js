(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{364:function(s,t,a){"use strict";a.r(t);var n=a(4),r=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"docker镜像制作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker镜像制作"}},[s._v("#")]),s._v(" docker镜像制作")]),s._v(" "),t("p",[s._v("将全部组件及其依赖库的编译、测试、打包等流程封装进一个Docker镜像中。采用这种方式会有以下这些问题：")]),s._v(" "),t("ul",[t("li",[s._v("Dockefile 特别长，可维护性降低。")]),s._v(" "),t("li",[s._v("镜像的层次多，体积大，部署时间长。")]),s._v(" "),t("li",[s._v("源代码存在泄漏的风险。")])]),s._v(" "),t("p",[s._v("制作小镜象")]),s._v(" "),t("p",[s._v("FROM 使用 apline、busybox、scratch")]),s._v(" "),t("p",[s._v("多阶段镜像构建")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" golang:alpine3.18  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" builder # AS 默认情况，每个构建阶段是没有命名的，通过整型编号进行引用(类似数组下标索引，0-第一个FROM，1-第二个FROM，类推)，通过AS <stageName>在FROM中为每个阶段命名。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /opt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" main.go /opt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" go build /opt/main.go")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./main"')])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" alpine:3.11")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token options"}},[t("span",{pre:!0,attrs:{class:"token property"}},[s._v("--from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("builder")])]),s._v(" /opt/main /")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./main"')])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("scratch镜像")]),s._v(" "),t("p",[s._v("Docker Scratch镜像是一个特殊的Docker镜像，它不基于任何其他镜像构建。相反，它是一个空白的镜像，只包含了Docker运行所需的最小文件系统和执行环境。这使得它非常适合用于构建轻量级容器化应用程序，它不包含任何额外的组件或库。Scratch镜像是一个精简的基础镜像，")])])}),[],!1,null,null,null);t.default=r.exports}}]);