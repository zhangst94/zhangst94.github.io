(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{381:function(s,n,t){"use strict";t.r(n);var a=t(4),e=Object(a.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"ingress概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ingress概念"}},[s._v("#")]),s._v(" Ingress概念")]),s._v(" "),n("p",[s._v("通俗来讲，ingress和之前提到的Service、Deployment，也是一个k8s的资源类型，in用于实现用域名的方式访问 k8s 内部应用。")]),s._v(" "),n("h2",{attrs:{id:"ingress安装使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ingress安装使用"}},[s._v("#")]),s._v(" Ingress安装使用")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --- 添加ingress的helm仓库")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@k8s-master01 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@k8s-master01 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# helm pull ingress-nginx/ingress-nginx")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@k8s-master01 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tar -zxvf ingress-nginx-3.6.0.tgz && cd ingress-nginx")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### --- helm的配置文件")]),s._v("\n \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@k8s-master01 ingress-nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# vim values.yaml  ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#******省略部分内容**********    ")]),s._v("\n  hostNetwork: "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("                   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 部署ingress的方式推荐使用hostNetwork去部署，hostNetwork是直接使用宿主机的端口号，这样它的性能可能会好一点。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#******省略部分内容**********")]),s._v("\n  dnsPolicy: ClusterFirstWithHostNet  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 若是使用hostNetwork的话dns策略是需要更改为ClusterFirstWithHostNet。不然k8s的pod是解析不了k8s内部的service，所以一定要设置成这个")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#******省略部分内容**********  ")]),s._v("\n  kind: DaemonSet                     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用DaemonSet去部署，使用deployment也是可以的，但是使用DaemonSet更受控制，我们可以固定到某个节点上面。这样就可以直接在宿主机上暴露一个端口号，这样k8s外部的集群就可以直接代理到Ingress上面。若是使用Deployment的话，可能需要deploymentservice可能暴露一个notepad，这样性能可能不是很好，推荐使用DaemonSet去部署，DaemonSet在去部署ingress的pod，暴露它的80和443端口，然后在外部的service代理到这个ingress所在的节点上的IP地址和端口号就可以。")]),s._v("\n  nodeSelector:\n    kubernetes.io/os: linux\n    ingress: "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"true"')]),s._v("                   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只有ingress为true这个标签的部署，没有就不用去部署了。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#******省略部分内容**********")]),s._v("\n    type: ClusterIP                                 。     \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### 镜像修改")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@k8s-master01 ingress-nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# helm install ingress-nginx -n ingress-nginx . --create-namespace")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])]),n("h2",{attrs:{id:"创建ingress"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建ingress"}},[s._v("#")]),s._v(" 创建Ingress")]),s._v(" "),n("h3",{attrs:{id:"创建ingress-yaml配置文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建ingress-yaml配置文件"}},[s._v("#")]),s._v(" 创建ingress.yaml配置文件")]),s._v(" "),n("div",{staticClass:"language-yaml line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@k8s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("master01 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# vim ingress.yaml ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" networking.k8s.io/v1beta1 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# networking.k8s.io/v1 / extensions/v1beta1 ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Ingress\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("annotations")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kubernetes.io/ingress.class")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nginx"')]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  声明配置的为ingress.class name为nginx的这个配置，")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" example\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("rules")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("                             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  一个Ingress可以配置多个rules")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("host")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" foo.bar.com                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  域名配置，可以不写，匹配*， *.bar.com")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("http")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("paths")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("                   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  相当于nginx的location配合，同一个host可以配置多个path / /abc")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("backend")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("serviceName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("svc \n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("servicePort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" /\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("h3",{attrs:{id:"查看创建的ingress"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#查看创建的ingress"}},[s._v("#")]),s._v(" 查看创建的ingress")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@k8s-master01 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl get ingress")]),s._v("\nNAME      CLASS    HOSTS         ADDRESS   PORTS   AGE\nexample   "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   foo.bar.com             "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("      15s\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h3",{attrs:{id:"创建多域名ingress-yaml配置文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建多域名ingress-yaml配置文件"}},[s._v("#")]),s._v(" 创建多域名ingress.yaml配置文件")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@k8s-master01 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# vim ingress-mulDomain.yaml")]),s._v("\napiVersion: networking.k8s.io/v1beta1 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# networking.k8s.io/v1 / extensions/v1beta1 ")]),s._v("\nkind: Ingress\nmetadata:\n  annotations:\n    kubernetes.io/ingress.class: "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nginx"')]),s._v("\n  name: example\nspec:\n  rules:                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 一个Ingress可以配置多个rules")]),s._v("\n  - host: foo.bar.com       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 域名配置，可以不写，匹配*， *.bar.com")]),s._v("\n    http:\n      paths:                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 相当于nginx的location配合，同一个host可以配置多个path / /abc")]),s._v("\n      - backend:\n          serviceName: nginx-svc \n          servicePort: "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n        path: /\n  - host: foo2.bar.com       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 域名配置，可以不写，匹配*， *.bar.com")]),s._v("\n    http:\n      paths:                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 相当于nginx的location配合，同一个host可以配置多个path / /abc")]),s._v("\n      - backend:\n          serviceName: nginx-svc-external\n          servicePort: "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n        path: /\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### --- 在写域名的时候，涉及到 rearunte的时候；")]),s._v("\n \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 需要做rearunte的域名和不需要做rearunte的域名需要分开写，写成两个Ingress")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 因为有的域名是不需要Rearunte的，若是写在一块，有可能两个域名都Rearunte掉。会造成问题。")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);